/* Query 1 */
-- Which genres earn the most revenue each year?
SELECT strftime('%Y', i.InvoiceDate) AS "Year",
       g.Name AS "Genre",
       ROUND(SUM(il.UnitPrice * il.Quantity), 2) AS "Revenue"
FROM Invoice i
JOIN InvoiceLine il
  ON i.InvoiceId = il.InvoiceId
JOIN Track t
  ON il.TrackId = t.TrackId
JOIN Genre g
  ON t.GenreId = g.GenreId
GROUP BY 1, 2
ORDER BY 1 ASC, 3 DESC;


/* Query 2 */
-- Which artists generate the most revenue, and at what average unit price?
WITH artist_rev AS (
    SELECT ar.Name AS "Artist",
           SUM(il.UnitPrice * il.Quantity) AS revenue,
           AVG(il.UnitPrice) AS avg_unit_price
    FROM InvoiceLine il
    JOIN Track t
      ON il.TrackId = t.TrackId
    JOIN Album al
      ON t.AlbumId = al.AlbumId
    JOIN Artist ar
      ON al.ArtistId = ar.ArtistId
    GROUP BY 1
)
SELECT Artist,
       ROUND(revenue, 2) AS "Revenue",
       ROUND(avg_unit_price, 2) AS "Avg Unit Price"
FROM artist_rev
ORDER BY 2 DESC
LIMIT 10;


/* Query 3 */
-- What is the ARPU (Average Revenue Per User) by country?
WITH per_customer AS (
    SELECT c.Country,
           i.CustomerId,
           SUM(il.UnitPrice * il.Quantity) AS cust_revenue
    FROM Customer c
    JOIN Invoice i
      ON c.CustomerId = i.CustomerId
    JOIN InvoiceLine il
      ON i.InvoiceId = il.InvoiceId
    GROUP BY 1, 2
),
country_rollup AS (
    SELECT Country,
           SUM(cust_revenue) AS total_revenue,
           COUNT(*) AS customers
    FROM per_customer
    GROUP BY 1
)
SELECT Country,
       ROUND(total_revenue, 2) AS "Total Revenue",
       customers AS "Customers",
       ROUND(total_revenue * 1.0 / customers, 2) AS "ARPU"
FROM country_rollup
ORDER BY 4 DESC;


/* Query 4 */
-- Which playlists actually contribute to sales revenue?
SELECT p.Name AS "Playlist",
       COUNT(DISTINCT t.TrackId) AS "Unique Tracks",
       SUM(il.Quantity) AS "Units Sold",
       ROUND(SUM(il.UnitPrice * il.Quantity), 2) AS "Revenue"
FROM Playlist p
JOIN PlaylistTrack pt
  ON p.PlaylistId = pt.PlaylistId
JOIN Track t
  ON pt.TrackId = t.TrackId
JOIN InvoiceLine il
  ON t.TrackId = il.TrackId
GROUP BY 1
HAVING Revenue > 0
ORDER BY 4 DESC;
